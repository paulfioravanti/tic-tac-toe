{"version":3,"sources":["Square.js","Row.js","Board.js","HistoricalMove.js","Game.js","index.js"],"names":["Square","handleClick","value","className","onClick","Row","squares","this","renderSquares","props","row","map","renderSquare","bind","square","index","key","handleSquareClick","React","Component","Board","state","rows","chunk","cells","array","size","chunked","length","push","slice","renderBoardRows","renderBoardRow","HistoricalMove","move","description","Game","history","INITIAL_BOARD","stepNumber","xIsNext","CELLS","lines","LINES","i","len","a","b","c","current","status","winner","calculateWinner","nextPlayer","currentState","moves","renderHistoricalMove","currentHistory","setState","concat","_move","handleHistoricalMoveClick","jumpTo","Array","fill","keys","Object","freeze","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15cf7d00.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Square({ handleClick, value }) {\n  return (\n    <button className=\"square\" onClick={handleClick}>\n      {value}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Square } from \"./Square\";\n\nexport class Row extends React.Component {\n  render() {\n    const squares = this.renderSquares();\n\n    return (\n      <div className=\"board-row\">\n        {squares}\n      </div>\n    );\n  }\n\n  // PRIVATE\n\n  renderSquares() {\n    return this.props.row.map(this.renderSquare.bind(this));\n  }\n\n  renderSquare(square, index) {\n    const { squares, handleClick } = this.props;\n    const key = `square-${index}`;\n    const value = squares[square];\n    const handleSquareClick = handleClick.bind(null, square);\n\n    return (\n      <Square\n        key={key}\n        value={value}\n        handleClick={handleSquareClick}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Row } from \"./Row\";\n\nexport class Board extends React.Component {\n  static chunk(array, size) {\n    const chunked = [];\n    let index = 0;\n    while (index < array.length) {\n      chunked.push(array.slice(index, size + index));\n      index += size;\n    }\n    return chunked;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: Board.chunk([...this.props.cells], 3)\n    }\n  }\n\n  render() {\n    const rows = this.renderBoardRows();\n\n    return (\n      <div>\n        {rows}\n      </div>\n    );\n  }\n\n  // PRIVATE\n\n  renderBoardRows() {\n    return this.state.rows.map(this.renderBoardRow.bind(this));\n  }\n\n  renderBoardRow(row, index) {\n    const { squares, handleClick } = this.props;\n    const key = `row-${index}`;\n\n    return (\n      <Row\n        key={key}\n        row={row}\n        squares={squares}\n        handleClick={handleClick}\n      />\n    );\n  }\n}\n","import React from \"react\";\n\nexport function HistoricalMove({ move, handleClick }) {\n  const description = move ? \"Go to move #\" + move : \"Go to game start\";\n\n  return (\n    <li>\n      <button onClick={handleClick}>\n        {description}\n      </button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { Board } from \"./Board\";\nimport { HistoricalMove } from \"./HistoricalMove\";\n\nexport class Game extends React.Component {\n  static INITIAL_BOARD = Array(9).fill(null);\n  static CELLS = Game.INITIAL_BOARD.keys();\n  static LINES = Object.freeze([\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]);\n\n  static calculateWinner(squares) {\n    const lines = Game.LINES;\n    for (let i = 0, len = lines.length; i < len; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  static status(current, xIsNext) {\n    const winner = Game.calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: ${Game.nextPlayer(xIsNext)}`;\n    }\n\n    return status;\n  }\n\n  static nextPlayer(xIsNext) {\n    return xIsNext ? \"X\" : \"O\";\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Game.INITIAL_BOARD\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      cells: Game.CELLS,\n      handleClick: this.handleClick.bind(this)\n    };\n  }\n\n  render() {\n    const { history, cells, handleClick, stepNumber, xIsNext } = this.state;\n    const currentState = history[stepNumber];\n    const moves = history.map(this.renderHistoricalMove.bind(this));\n    const status = Game.status(currentState, xIsNext);\n    const squares = currentState.squares;\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={squares}\n            cells={cells}\n            handleClick={handleClick}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n  // PRIVATE\n\n  handleClick(square) {\n    const { history, stepNumber, xIsNext } = this.state;\n    const currentHistory = history.slice(0, stepNumber + 1);\n    const currentState = currentHistory[currentHistory.length - 1];\n    const squares = currentState.squares.slice();\n\n    if (Game.calculateWinner(squares) || squares[square]) {\n      return;\n    }\n    squares[square] = Game.nextPlayer(xIsNext);\n\n    this.setState({\n      history: currentHistory.concat([{\n        squares: squares\n      }]),\n      stepNumber: currentHistory.length,\n      xIsNext: !xIsNext\n    });\n  }\n\n  renderHistoricalMove(_move, index) {\n    const handleHistoricalMoveClick = this.jumpTo.bind(this, index)\n\n    return (\n      <HistoricalMove\n        key={index}\n        move={index}\n        handleClick={handleHistoricalMoveClick}\n      />\n    );\n  }\n\n  jumpTo(index) {\n    this.setState({\n      stepNumber: index,\n      xIsNext: (index % 2) === 0\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Game } from \"./Game\";\n\nReactDOM.render(\n  <Game />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}