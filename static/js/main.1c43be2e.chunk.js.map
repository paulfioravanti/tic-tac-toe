{"version":3,"sources":["Square.js","Row.js","Board.js","HistoricalMove.js","Game.js","index.js"],"names":["Square","handleClick","value","className","onClick","Row","props","squares","row","map","renderSquare","bind","renderSquares","square","index","key","handleSquareClick","Board","cells","useState","array","size","chunked","length","push","slice","chunk","boardRows","HistoricalMove","move","description","INITIAL_BOARD","Array","fill","CELLS","keys","LINES","Object","freeze","Game","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","currentHistory","calculateWinner","nextPlayer","concat","currentState","moves","_move","handleHistoricalMoveClick","jumpTo","status","winner","getStatus","i","len","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c43be2e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Square({ handleClick, value }) {\n  return (\n    <button className=\"square\" onClick={handleClick}>\n      {value}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Square } from \"./Square\";\n\nexport function Row(props) {\n  const squares = renderSquares(props);\n\n  return (\n    <div className=\"board-row\">\n      {squares}\n    </div>\n  );\n}\n\n// PRIVATE\n\nfunction renderSquares({ row, squares, handleClick }) {\n  return row.map(renderSquare.bind(null, squares, handleClick));\n}\n\nfunction renderSquare(squares, handleClick, square, index) {\n  const key = `square-${index}`;\n  const value = squares[square];\n  const handleSquareClick = handleClick.bind(null, square);\n\n  return (\n    <Square\n      key={key}\n      value={value}\n      handleClick={handleSquareClick}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Row } from \"./Row\";\n\nexport function Board({ cells, squares, handleClick }) {\n  const [rows] = useState(chunk([...cells], 3));\n  const boardRows = rows.map(renderBoardRow.bind(null));\n\n  return (\n    <div>\n      {boardRows}\n    </div>\n  );\n\n  function renderBoardRow(row, index) {\n    return (\n      <Row\n        key={index}\n        row={row}\n        squares={squares}\n        handleClick={handleClick}\n      />\n    );\n  }\n}\n\n// PRIVATE\n\nfunction chunk(array, size) {\n  const chunked = [];\n  let index = 0;\n  while (index < array.length) {\n    chunked.push(array.slice(index, size + index));\n    index += size;\n  }\n  return chunked;\n}\n","import React from \"react\";\n\nexport function HistoricalMove({ move, handleClick }) {\n  const description = move ? \"Go to move #\" + move : \"Go to game start\";\n\n  return (\n    <li>\n      <button onClick={handleClick}>\n        {description}\n      </button>\n    </li>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Board } from \"./Board\";\nimport { HistoricalMove } from \"./HistoricalMove\";\n\nconst INITIAL_BOARD = Array(9).fill(null);\nconst CELLS = INITIAL_BOARD.keys();\nconst LINES = Object.freeze([\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n]);\n\nexport function Game(props) {\n  const [history, setHistory] = useState([{ squares: INITIAL_BOARD }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const handleClick = setHandleClick.bind(null);\n  const currentState = history[stepNumber];\n  const moves = history.map(renderHistoricalMove.bind(null));\n  const status = getStatus(currentState, xIsNext);\n  const squares = currentState.squares;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={squares}\n          cells={CELLS}\n          handleClick={handleClick}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n\n  // PRIVATE\n\n  function setHandleClick(square) {\n    const currentHistory = history.slice(0, stepNumber + 1);\n    const currentState = currentHistory[currentHistory.length - 1];\n    const squares = currentState.squares.slice();\n\n    if (calculateWinner(squares) || squares[square]) {\n      return;\n    }\n    squares[square] = nextPlayer(xIsNext);\n\n    setHistory(currentHistory.concat([{ squares: squares }]));\n    setStepNumber(currentHistory.length);\n    setXIsNext((xIsNext) => !xIsNext);\n  }\n\n  function renderHistoricalMove(_move, index) {\n    const handleHistoricalMoveClick = jumpTo.bind(null, index)\n\n    return (\n      <HistoricalMove\n        key={index}\n        move={index}\n        handleClick={handleHistoricalMoveClick}\n      />\n    );\n  }\n\n  function jumpTo(index) {\n    setStepNumber(index);\n    setXIsNext(index % 2 === 0);\n  }\n}\n\n// PRIVATE\n\nfunction calculateWinner(squares) {\n  for (let i = 0, len = LINES.length; i < len; i++) {\n    const [a, b, c] = LINES[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction getStatus(currentState, xIsNext) {\n  const winner = calculateWinner(currentState.squares);\n  let status;\n\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else {\n    status = `Next player: ${nextPlayer(xIsNext)}`;\n  }\n\n  return status;\n}\n\nfunction nextPlayer(xIsNext) {\n  return xIsNext ? \"X\" : \"O\";\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Game } from \"./Game\";\n\nReactDOM.render(\n  <Game />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}